# -*- coding: utf-8 -*-
"""marisa_trie.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1xX5MQ70UWC5nE6Vly2KWcyZ7ibulhXlk

Code to use marisa-trie to encode nietzsche.txt
"""

char_seq_len=10
delta_step=1

# Read file to get all the words.
f = open('nietzsche.txt', 'r')
content = f.read()
import re
s = "string. With. Punctuation?"
s = re.sub(r'[^\w\s]','',content)
s = re.sub('\n', ' ', s)
s = str.lower(s)
content = s

content_size = len(content)
tokens_max_cnt = int(content_size/delta_step)
print('content_size = {} tokens_max_cnt = {}'.format(content_size, tokens_max_cnt))

tokens_all = set()
for i in range(0, tokens_max_cnt):  
  start = int(i*delta_step)
  end = int(i*delta_step + char_seq_len)
  # print('start = {}, end = {}'.format(start, end))  
  seq = content[start:end]
  # print('seq = {}'.format(seq))
  tokens_all.add(seq)
  
tokens = list(tokens_all)

tokens[0:3]

tokens_incr = set() # incremental tokens

for token in tokens:
  for i in range(0, len(token)+1):
    token_i = token[0: i]
    tokens_incr.add(token_i)
tokens_incr = list(tokens_incr)
len(tokens_incr)

"""Creating Ground Truth Data Structure"""

!pip install marisa-trie

import marisa_trie
# https://stackoverflow.com/questions/11015320/how-to-create-a-trie-in-python

trie = marisa_trie.Trie(tokens_incr)

trie.prefixes('see mo')

object_methods = [method_name for method_name in dir(trie)
                  if callable(getattr(trie, method_name))]
object_methods

